#minimum number off jumps to reach end
#In this method, we build a jumps[] array from left to right such that jumps[i] indicates the minimum number of jumps needed to reach arr[i]
#from arr[0].Finally, we return jumps[n-1].



public class Main
{
	public static void main(String[] args) {
	    int[] ar={1, 3, 6, 3, 2, 3, 6, 8, 9, 5};
	    int n=ar.length;
	    int[] ar1=new int[n];
	    ar1[0]=0;
	    int[] ar2=new int[n];
	    for(int i=1;i<n;i++){
	        ar1[i]=Integer.MAX_VALUE;
	    for(int j=0;j<i;j++){
	       if(i<=j+ar[j]&&ar1[j]+1<ar1[i]){
	            ar1[i] = ar1[j] + 1; 
                 break; 
	       }
	    }
	  }
	    
	    
		System.out.println(ar1[n-1]);
	}
}
